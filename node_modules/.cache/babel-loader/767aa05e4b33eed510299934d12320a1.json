{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manav\\\\OneDrive\\\\Desktop\\\\resume-builder\\\\src\\\\components\\\\publicPreview.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { firestore } from \"../firebase\";\nimport \"./css/preview.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet PublicPreview = () => {\n  _s();\n\n  let {\n    rid\n  } = useParams();\n  let [previewData, setPreviewData] = useState(null);\n  useEffect(() => {\n    firestore.collection(\"resume\").doc(rid).get().then(doc => {\n      let data = doc.data();\n      setPreviewData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: previewData && previewData.details.isPublic ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `template-${previewData.code}`,\n        children: previewData.details.fname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : \"Not available or not public\"\n  }, void 0, false);\n};\n\n_s(PublicPreview, \"Fd7GOI6RqNhv+Ok7h48LROh/ieo=\", false, function () {\n  return [useParams];\n});\n\n_c = PublicPreview;\nexport default PublicPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicPreview\");","map":{"version":3,"sources":["C:/Users/Manav/OneDrive/Desktop/resume-builder/src/components/publicPreview.jsx"],"names":["useState","useEffect","useParams","firestore","PublicPreview","rid","previewData","setPreviewData","collection","doc","get","then","data","details","isPublic","code","fname"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,mBAAP;;;;AAEA,IAAIC,aAAa,GAAG,MAAM;AAAA;;AACxB,MAAI;AAAEC,IAAAA;AAAF,MAAUH,SAAS,EAAvB;AAEA,MAAI,CAACI,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,CACNK,UADH,CACc,QADd,EAEGC,GAFH,CAEOJ,GAFP,EAGGK,GAHH,GAIGC,IAJH,CAISF,GAAD,IAAS;AACb,UAAIG,IAAI,GAAGH,GAAG,CAACG,IAAJ,EAAX;AACAL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,cACGN,WAAW,IAAIA,WAAW,CAACO,OAAZ,CAAoBC,QAAnC,gBACC;AAAA,6BACE;AAAG,QAAA,SAAS,EAAG,YAAWR,WAAW,CAACS,IAAK,EAA3C;AAAA,kBACGT,WAAW,CAACO,OAAZ,CAAoBG;AADvB;AAAA;AAAA;AAAA;AAAA;AADF,qBADD,GAOC;AARJ,mBADF;AAaD,CA7BD;;GAAIZ,a;UACYF,S;;;KADZE,a;AA+BJ,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { firestore } from \"../firebase\";\nimport \"./css/preview.css\";\n\nlet PublicPreview = () => {\n  let { rid } = useParams();\n\n  let [previewData, setPreviewData] = useState(null);\n\n  useEffect(() => {\n    firestore\n      .collection(\"resume\")\n      .doc(rid)\n      .get()\n      .then((doc) => {\n        let data = doc.data();\n        setPreviewData(data);\n      });\n  }, []);\n\n  return (\n    <>\n      {previewData && previewData.details.isPublic ? (\n        <>\n          <p className={`template-${previewData.code}`}>\n            {previewData.details.fname}\n          </p>\n        </>\n      ) : (\n        \"Not available or not public\"\n      )}\n    </>\n  );\n};\n\nexport default PublicPreview;\n"]},"metadata":{},"sourceType":"module"}